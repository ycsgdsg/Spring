<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- Hibernate4 -->
    <!-- 加载资源文件  其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载-->
    <context:property-placeholder location="classpath:spring/hibernate/mysql.properties" />

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!--  <prop key="hibernate.current_session_context_class">thread</prop> -->
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>database.type.UserAccountEntity</value>
            </list>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:spring/hibernate/DatabaseEntity.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- 数据库映射 -->
    <!--  class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" -->
    <!--  class="org.springframework.jdbc.datasource.DriverManagerDataSource" -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${hibernate.driverClassName}" />
        <property name="url" value="${hibernate.url}" />
        <property name="username" value="${hibernate.username}" />
        <property name="password" value="${hibernate.password}" />
    </bean>

    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

     <!--事务代理类-->
    <!--<bean id="transactionBase"-->
          <!--class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"-->
          <!--lazy-init="true" abstract="true">-->
        <!--<property name="transactionManager" ref="transactionManager"></property>-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="get*">PROPAGATION_NEVER</prop>-->
                <!--<prop key="find*">PROPAGATION_NEVER</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 配置事务异常封装 -->
    <!--<bean id="persistenceExceptionTranslationPostProcessor"-->
          <!--class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />-->

    <!--&lt;!&ndash;  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="add*" propagation="REQUIRED" />-->
            <!--<tx:method name="save*" propagation="REQUIRED" />-->
            <!--<tx:method name="get*" propagation="REQUIRED" />-->
            <!--<tx:method name="*" read-only="true" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config expose-proxy="true">-->
        <!--&lt;!&ndash; 只对业务逻辑层实施事务 &ndash;&gt;-->
        <!--<aop:pointcut id="txPointcut" expression="execution(* service.*(..))" />-->
        <!--&lt;!&ndash; Advisor定义，切入点和通知分别为txPointcut、txAdvice &ndash;&gt;-->
        <!--<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>-->
    <!--</aop:config>-->

</beans>